# Before modifying this file, please check with blossom team
name: Blossom-CI
on:
  issue_comment:
    types: [created]
  
jobs:
  authorization:
    # trigger on pre-defined text
    if: github.event.comment.body == '/blossom-ci'
    runs-on: [self-hosted, linux, blossom]
    steps:
      - name: Check if comment writer is authorized person
        run: blossom-ci
        env:
          OPERATION: 'AUTH'
          VERSION: '1'
 
  vulnerability-scan-job:
    needs: [authorization]
    runs-on: ubuntu-latest
    steps:
      - name: Get pull request data
        id: pull_request_data
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/pulls/:issue_id
          repository: ${{ github.repository }}
          issue_id: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        
      - name: Update status
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/statuses/:sha
          repository: ${{ github.repository }}
          sha: ${{ fromJson(steps.pull_request_data.outputs.data).head.sha }}
          state: "pending"
          target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          description: "vulnerability scan running"
          context: "blossom-ci"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          ref: ${{ fromJson(steps.pull_request_data.outputs.data).head.ref }}
          lfs: 'true'

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Get project data (maven)
        run: |
          echo ::set-env name=projects::$(mvn -am dependency:tree | grep maven-dependency-plugin | awk '{ out="com.nvidia:"$(NF-1);print out }' | grep rapids | xargs | sed -e 's/ /,/g')
      
      - name: Add mask
        run: echo "::add-mask::${{ secrets.BLACKDUCK_URL }}"
      
      - name: Run synopsys detect
        id: scan_result
        uses: blackducksoftware/github-action@2.0.1
        env:
          PROJECTS: ${{ env.projects }}
        with:
          args: >
            --blackduck.url="https://${{ secrets.BLACKDUCK_URL }}" 
            --blackduck.api.token="${{ secrets.BLACKDUCK_API_TOKEN }}" 
            --detect.force.success=false 
            --detect.maven.build.command="-pl='$PROJECTS -am'"
            --detect.parallel.processors=0
            --detect.project.name="${{ github.repository }}"
            --detect.project.version.name="${{ fromJson(steps.pull_request_data.outputs.data).head.ref }}${{ github.run_id }}"
       
      - name: Find scan result url
        run: echo ${{steps.scan_result.outputs.data}} | grep -i "Black Duck Project BOM" 
             
  vulnerability-scan-check:
    needs: [vulnerability-scan-job]
    runs-on: [self-hosted, linux, blossom]
    steps:
      - name: Check for new issue in vulnerability scan 
        run: blossom-ci
        env:
          OPERATION: 'SCAN-CHECK'
          VERSION: '1'
          BLACKDUCK_TOKEN: "${{ secrets.BLACKDUCK_API_TOKEN }}" 
          BLACKDUCK_URL: "${{ secrets.BLACKDUCK_URL }}"
